// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protodescriptor.proto

#include "protodescriptor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protos {
PROTOBUF_CONSTEXPR ProtoDescriptor::ProtoDescriptor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.desc_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoDescriptorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoDescriptorDefaultTypeInternal() {}
  union {
    ProtoDescriptor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoDescriptorDefaultTypeInternal _ProtoDescriptor_default_instance_;
PROTOBUF_CONSTEXPR ProtoName::ProtoName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoNameDefaultTypeInternal() {}
  union {
    ProtoName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoNameDefaultTypeInternal _ProtoName_default_instance_;
PROTOBUF_CONSTEXPR ProtoDescriptors::ProtoDescriptors(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.desc_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoDescriptorsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoDescriptorsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoDescriptorsDefaultTypeInternal() {}
  union {
    ProtoDescriptors _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoDescriptorsDefaultTypeInternal _ProtoDescriptors_default_instance_;
PROTOBUF_CONSTEXPR ProtoNames::ProtoNames(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProtoNamesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtoNamesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtoNamesDefaultTypeInternal() {}
  union {
    ProtoNames _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtoNamesDefaultTypeInternal _ProtoNames_default_instance_;
}  // namespace protos
static ::_pb::Metadata file_level_metadata_protodescriptor_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_protodescriptor_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_protodescriptor_2eproto = nullptr;

const uint32_t TableStruct_protodescriptor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoDescriptor, _impl_.desc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoName, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoDescriptors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoDescriptors, _impl_.desc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoNames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protos::ProtoNames, _impl_.name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::protos::ProtoDescriptor)},
  { 7, -1, -1, sizeof(::protos::ProtoName)},
  { 14, -1, -1, sizeof(::protos::ProtoDescriptors)},
  { 21, -1, -1, sizeof(::protos::ProtoNames)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protos::_ProtoDescriptor_default_instance_._instance,
  &::protos::_ProtoName_default_instance_._instance,
  &::protos::_ProtoDescriptors_default_instance_._instance,
  &::protos::_ProtoNames_default_instance_._instance,
};

const char descriptor_table_protodef_protodescriptor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025protodescriptor.proto\022\006protos\"\037\n\017Proto"
  "Descriptor\022\014\n\004desc\030\001 \001(\014\"\031\n\tProtoName\022\014\n"
  "\004name\030\001 \001(\t\" \n\020ProtoDescriptors\022\014\n\004desc\030"
  "\001 \003(\014\"\032\n\nProtoNames\022\014\n\004name\030\001 \003(\tB<Z)git"
  "hub.com/topfreegames/pitaya/pkg/protos\252\002"
  "\016NPitaya.Protosb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_protodescriptor_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protodescriptor_2eproto = {
    false, false, 223, descriptor_table_protodef_protodescriptor_2eproto,
    "protodescriptor.proto",
    &descriptor_table_protodescriptor_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_protodescriptor_2eproto::offsets,
    file_level_metadata_protodescriptor_2eproto, file_level_enum_descriptors_protodescriptor_2eproto,
    file_level_service_descriptors_protodescriptor_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protodescriptor_2eproto_getter() {
  return &descriptor_table_protodescriptor_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protodescriptor_2eproto(&descriptor_table_protodescriptor_2eproto);
namespace protos {

// ===================================================================

class ProtoDescriptor::_Internal {
 public:
};

ProtoDescriptor::ProtoDescriptor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protos.ProtoDescriptor)
}
ProtoDescriptor::ProtoDescriptor(const ProtoDescriptor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoDescriptor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.desc_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.desc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.desc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_desc().empty()) {
    _this->_impl_.desc_.Set(from._internal_desc(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protos.ProtoDescriptor)
}

inline void ProtoDescriptor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.desc_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.desc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.desc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProtoDescriptor::~ProtoDescriptor() {
  // @@protoc_insertion_point(destructor:protos.ProtoDescriptor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoDescriptor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.desc_.Destroy();
}

void ProtoDescriptor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ProtoDescriptor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.desc_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoDescriptor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes desc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_desc();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoDescriptor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ProtoDescriptor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes desc = 1;
  if (!this->_internal_desc().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_desc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ProtoDescriptor)
  return target;
}

size_t ProtoDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ProtoDescriptor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes desc = 1;
  if (!this->_internal_desc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_desc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoDescriptor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoDescriptor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoDescriptor::GetClassData() const { return &_class_data_; }


void ProtoDescriptor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoDescriptor*>(&to_msg);
  auto& from = static_cast<const ProtoDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.ProtoDescriptor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_desc().empty()) {
    _this->_internal_set_desc(from._internal_desc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoDescriptor::CopyFrom(const ProtoDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ProtoDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDescriptor::IsInitialized() const {
  return true;
}

void ProtoDescriptor::InternalSwap(ProtoDescriptor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.desc_, lhs_arena,
      &other->_impl_.desc_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protodescriptor_2eproto_getter, &descriptor_table_protodescriptor_2eproto_once,
      file_level_metadata_protodescriptor_2eproto[0]);
}

// ===================================================================

class ProtoName::_Internal {
 public:
};

ProtoName::ProtoName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protos.ProtoName)
}
ProtoName::ProtoName(const ProtoName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:protos.ProtoName)
}

inline void ProtoName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProtoName::~ProtoName() {
  // @@protoc_insertion_point(destructor:protos.ProtoName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ProtoName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoName::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ProtoName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protos.ProtoName.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ProtoName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protos.ProtoName.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ProtoName)
  return target;
}

size_t ProtoName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ProtoName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoName::GetClassData() const { return &_class_data_; }


void ProtoName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoName*>(&to_msg);
  auto& from = static_cast<const ProtoName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.ProtoName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoName::CopyFrom(const ProtoName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ProtoName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoName::IsInitialized() const {
  return true;
}

void ProtoName::InternalSwap(ProtoName* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protodescriptor_2eproto_getter, &descriptor_table_protodescriptor_2eproto_once,
      file_level_metadata_protodescriptor_2eproto[1]);
}

// ===================================================================

class ProtoDescriptors::_Internal {
 public:
};

ProtoDescriptors::ProtoDescriptors(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protos.ProtoDescriptors)
}
ProtoDescriptors::ProtoDescriptors(const ProtoDescriptors& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoDescriptors* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.desc_){from._impl_.desc_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protos.ProtoDescriptors)
}

inline void ProtoDescriptors::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.desc_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProtoDescriptors::~ProtoDescriptors() {
  // @@protoc_insertion_point(destructor:protos.ProtoDescriptors)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoDescriptors::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.desc_.~RepeatedPtrField();
}

void ProtoDescriptors::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoDescriptors::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ProtoDescriptors)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.desc_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoDescriptors::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes desc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_desc();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoDescriptors::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ProtoDescriptors)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes desc = 1;
  for (int i = 0, n = this->_internal_desc_size(); i < n; i++) {
    const auto& s = this->_internal_desc(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ProtoDescriptors)
  return target;
}

size_t ProtoDescriptors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ProtoDescriptors)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes desc = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.desc_.size());
  for (int i = 0, n = _impl_.desc_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.desc_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoDescriptors::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoDescriptors::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoDescriptors::GetClassData() const { return &_class_data_; }


void ProtoDescriptors::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoDescriptors*>(&to_msg);
  auto& from = static_cast<const ProtoDescriptors&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.ProtoDescriptors)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.desc_.MergeFrom(from._impl_.desc_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoDescriptors::CopyFrom(const ProtoDescriptors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ProtoDescriptors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoDescriptors::IsInitialized() const {
  return true;
}

void ProtoDescriptors::InternalSwap(ProtoDescriptors* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.desc_.InternalSwap(&other->_impl_.desc_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoDescriptors::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protodescriptor_2eproto_getter, &descriptor_table_protodescriptor_2eproto_once,
      file_level_metadata_protodescriptor_2eproto[2]);
}

// ===================================================================

class ProtoNames::_Internal {
 public:
};

ProtoNames::ProtoNames(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protos.ProtoNames)
}
ProtoNames::ProtoNames(const ProtoNames& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProtoNames* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){from._impl_.name_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protos.ProtoNames)
}

inline void ProtoNames::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProtoNames::~ProtoNames() {
  // @@protoc_insertion_point(destructor:protos.ProtoNames)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProtoNames::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.~RepeatedPtrField();
}

void ProtoNames::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProtoNames::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ProtoNames)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoNames::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "protos.ProtoNames.name"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProtoNames::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ProtoNames)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protos.ProtoNames.name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ProtoNames)
  return target;
}

size_t ProtoNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ProtoNames)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.name_.size());
  for (int i = 0, n = _impl_.name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.name_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtoNames::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProtoNames::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtoNames::GetClassData() const { return &_class_data_; }


void ProtoNames::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProtoNames*>(&to_msg);
  auto& from = static_cast<const ProtoNames&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protos.ProtoNames)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.name_.MergeFrom(from._impl_.name_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtoNames::CopyFrom(const ProtoNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ProtoNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoNames::IsInitialized() const {
  return true;
}

void ProtoNames::InternalSwap(ProtoNames* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.name_.InternalSwap(&other->_impl_.name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoNames::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protodescriptor_2eproto_getter, &descriptor_table_protodescriptor_2eproto_once,
      file_level_metadata_protodescriptor_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protos::ProtoDescriptor*
Arena::CreateMaybeMessage< ::protos::ProtoDescriptor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ProtoDescriptor >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ProtoName*
Arena::CreateMaybeMessage< ::protos::ProtoName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ProtoName >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ProtoDescriptors*
Arena::CreateMaybeMessage< ::protos::ProtoDescriptors >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ProtoDescriptors >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ProtoNames*
Arena::CreateMaybeMessage< ::protos::ProtoNames >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ProtoNames >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
